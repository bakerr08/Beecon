#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beecon.MVC.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BeeconDB")]
	public partial class DataAccessDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    partial void InserttblTag(tblTag instance);
    partial void UpdatetblTag(tblTag instance);
    partial void DeletetblTag(tblTag instance);
    #endregion
		
		public DataAccessDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BeeconDBConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		public System.Data.Linq.Table<tblTag> tblTags
		{
			get
			{
				return this.GetTable<tblTag>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUser")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Email;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _ZipCode;
		
		private System.Nullable<System.DateTime> _Dob;
		
		private string _PasswordHashed;
		
		private System.Nullable<int> _TagsFound;
		
		private System.Nullable<int> _TagsPosted;
		
		private string _Gender;
		
		private EntitySet<tblTag> _tblTags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnDobChanging(System.Nullable<System.DateTime> value);
    partial void OnDobChanged();
    partial void OnPasswordHashedChanging(string value);
    partial void OnPasswordHashedChanged();
    partial void OnTagsFoundChanging(System.Nullable<int> value);
    partial void OnTagsFoundChanged();
    partial void OnTagsPostedChanging(System.Nullable<int> value);
    partial void OnTagsPostedChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    #endregion
		
		public tblUser()
		{
			this._tblTags = new EntitySet<tblTag>(new Action<tblTag>(this.attach_tblTags), new Action<tblTag>(this.detach_tblTags));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(45)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(45)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(45)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(45)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dob", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dob
		{
			get
			{
				return this._Dob;
			}
			set
			{
				if ((this._Dob != value))
				{
					this.OnDobChanging(value);
					this.SendPropertyChanging();
					this._Dob = value;
					this.SendPropertyChanged("Dob");
					this.OnDobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHashed", DbType="VarChar(45)")]
		public string PasswordHashed
		{
			get
			{
				return this._PasswordHashed;
			}
			set
			{
				if ((this._PasswordHashed != value))
				{
					this.OnPasswordHashedChanging(value);
					this.SendPropertyChanging();
					this._PasswordHashed = value;
					this.SendPropertyChanged("PasswordHashed");
					this.OnPasswordHashedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagsFound", DbType="Int")]
		public System.Nullable<int> TagsFound
		{
			get
			{
				return this._TagsFound;
			}
			set
			{
				if ((this._TagsFound != value))
				{
					this.OnTagsFoundChanging(value);
					this.SendPropertyChanging();
					this._TagsFound = value;
					this.SendPropertyChanged("TagsFound");
					this.OnTagsFoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagsPosted", DbType="Int")]
		public System.Nullable<int> TagsPosted
		{
			get
			{
				return this._TagsPosted;
			}
			set
			{
				if ((this._TagsPosted != value))
				{
					this.OnTagsPostedChanging(value);
					this.SendPropertyChanging();
					this._TagsPosted = value;
					this.SendPropertyChanged("TagsPosted");
					this.OnTagsPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblTag", Storage="_tblTags", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<tblTag> tblTags
		{
			get
			{
				return this._tblTags;
			}
			set
			{
				this._tblTags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblTags(tblTag entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblTags(tblTag entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTag")]
	public partial class tblTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TagID;
		
		private string _TagLongitude;
		
		private string _TagLatitude;
		
		private string _TagDescription;
		
		private System.Nullable<System.DateTime> _TagDateCreated;
		
		private System.Nullable<System.DateTime> _TagExpired;
		
		private int _UserID;
		
		private string _TagContent_URL;
		
		private int _PrivacyTypeID;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagIDChanging(int value);
    partial void OnTagIDChanged();
    partial void OnTagLongitudeChanging(string value);
    partial void OnTagLongitudeChanged();
    partial void OnTagLatitudeChanging(string value);
    partial void OnTagLatitudeChanged();
    partial void OnTagDescriptionChanging(string value);
    partial void OnTagDescriptionChanged();
    partial void OnTagDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnTagDateCreatedChanged();
    partial void OnTagExpiredChanging(System.Nullable<System.DateTime> value);
    partial void OnTagExpiredChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnTagContent_URLChanging(string value);
    partial void OnTagContent_URLChanged();
    partial void OnPrivacyTypeIDChanging(int value);
    partial void OnPrivacyTypeIDChanged();
    #endregion
		
		public tblTag()
		{
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagLongitude", DbType="VarChar(45)")]
		public string TagLongitude
		{
			get
			{
				return this._TagLongitude;
			}
			set
			{
				if ((this._TagLongitude != value))
				{
					this.OnTagLongitudeChanging(value);
					this.SendPropertyChanging();
					this._TagLongitude = value;
					this.SendPropertyChanged("TagLongitude");
					this.OnTagLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagLatitude", DbType="VarChar(45)")]
		public string TagLatitude
		{
			get
			{
				return this._TagLatitude;
			}
			set
			{
				if ((this._TagLatitude != value))
				{
					this.OnTagLatitudeChanging(value);
					this.SendPropertyChanging();
					this._TagLatitude = value;
					this.SendPropertyChanged("TagLatitude");
					this.OnTagLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagDescription", DbType="VarChar(45)")]
		public string TagDescription
		{
			get
			{
				return this._TagDescription;
			}
			set
			{
				if ((this._TagDescription != value))
				{
					this.OnTagDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TagDescription = value;
					this.SendPropertyChanged("TagDescription");
					this.OnTagDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagDateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> TagDateCreated
		{
			get
			{
				return this._TagDateCreated;
			}
			set
			{
				if ((this._TagDateCreated != value))
				{
					this.OnTagDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._TagDateCreated = value;
					this.SendPropertyChanged("TagDateCreated");
					this.OnTagDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagExpired", DbType="DateTime")]
		public System.Nullable<System.DateTime> TagExpired
		{
			get
			{
				return this._TagExpired;
			}
			set
			{
				if ((this._TagExpired != value))
				{
					this.OnTagExpiredChanging(value);
					this.SendPropertyChanging();
					this._TagExpired = value;
					this.SendPropertyChanged("TagExpired");
					this.OnTagExpiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagContent_URL", DbType="VarChar(70)")]
		public string TagContent_URL
		{
			get
			{
				return this._TagContent_URL;
			}
			set
			{
				if ((this._TagContent_URL != value))
				{
					this.OnTagContent_URLChanging(value);
					this.SendPropertyChanging();
					this._TagContent_URL = value;
					this.SendPropertyChanged("TagContent_URL");
					this.OnTagContent_URLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivacyTypeID", DbType="Int NOT NULL")]
		public int PrivacyTypeID
		{
			get
			{
				return this._PrivacyTypeID;
			}
			set
			{
				if ((this._PrivacyTypeID != value))
				{
					this.OnPrivacyTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PrivacyTypeID = value;
					this.SendPropertyChanged("PrivacyTypeID");
					this.OnPrivacyTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblTag", Storage="_tblUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblTags.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblTags.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
