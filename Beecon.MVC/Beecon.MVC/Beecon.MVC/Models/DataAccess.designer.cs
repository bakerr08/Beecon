#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beecon.MVC.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BeeconDB")]
	public partial class DataAccessDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    partial void InserttblBeecon(tblBeecon instance);
    partial void UpdatetblBeecon(tblBeecon instance);
    partial void DeletetblBeecon(tblBeecon instance);
    #endregion
		
		public DataAccessDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BeeconDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		public System.Data.Linq.Table<tblBeecon> tblBeecons
		{
			get
			{
				return this.GetTable<tblBeecon>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUser")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private string _Email;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _ZipCode;
		
		private System.Nullable<System.DateTime> _Dob;
		
		private string _PasswordHashed;
		
		private System.Nullable<int> _BeeconsFound;
		
		private System.Nullable<int> _BeeconsPosted;
		
		private string _Gender;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private EntitySet<tblBeecon> _tblBeecons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnDobChanging(System.Nullable<System.DateTime> value);
    partial void OnDobChanged();
    partial void OnPasswordHashedChanging(string value);
    partial void OnPasswordHashedChanged();
    partial void OnBeeconsFoundChanging(System.Nullable<int> value);
    partial void OnBeeconsFoundChanged();
    partial void OnBeeconsPostedChanging(System.Nullable<int> value);
    partial void OnBeeconsPostedChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    #endregion
		
		public tblUser()
		{
			this._tblBeecons = new EntitySet<tblBeecon>(new Action<tblBeecon>(this.attach_tblBeecons), new Action<tblBeecon>(this.detach_tblBeecons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(45)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(45)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(45)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(45)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dob", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dob
		{
			get
			{
				return this._Dob;
			}
			set
			{
				if ((this._Dob != value))
				{
					this.OnDobChanging(value);
					this.SendPropertyChanging();
					this._Dob = value;
					this.SendPropertyChanged("Dob");
					this.OnDobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHashed", DbType="VarChar(45)")]
		public string PasswordHashed
		{
			get
			{
				return this._PasswordHashed;
			}
			set
			{
				if ((this._PasswordHashed != value))
				{
					this.OnPasswordHashedChanging(value);
					this.SendPropertyChanging();
					this._PasswordHashed = value;
					this.SendPropertyChanged("PasswordHashed");
					this.OnPasswordHashedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeeconsFound", DbType="Int")]
		public System.Nullable<int> BeeconsFound
		{
			get
			{
				return this._BeeconsFound;
			}
			set
			{
				if ((this._BeeconsFound != value))
				{
					this.OnBeeconsFoundChanging(value);
					this.SendPropertyChanging();
					this._BeeconsFound = value;
					this.SendPropertyChanged("BeeconsFound");
					this.OnBeeconsFoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeeconsPosted", DbType="Int")]
		public System.Nullable<int> BeeconsPosted
		{
			get
			{
				return this._BeeconsPosted;
			}
			set
			{
				if ((this._BeeconsPosted != value))
				{
					this.OnBeeconsPostedChanging(value);
					this.SendPropertyChanging();
					this._BeeconsPosted = value;
					this.SendPropertyChanged("BeeconsPosted");
					this.OnBeeconsPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(45)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(45)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(45)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblBeecon", Storage="_tblBeecons", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<tblBeecon> tblBeecons
		{
			get
			{
				return this._tblBeecons;
			}
			set
			{
				this._tblBeecons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblBeecons(tblBeecon entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblBeecons(tblBeecon entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBeecon")]
	public partial class tblBeecon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BeeconID;
		
		private string _BeeconLongitude;
		
		private string _BeeconLatitude;
		
		private string _BeeconDescription;
		
		private System.Nullable<System.DateTime> _BeeconDateCreated;
		
		private System.Nullable<System.DateTime> _BeeconExpired;
		
		private System.Guid _UserID;
		
		private string _BeeconContent_URL;
		
		private int _PrivacyTypeID;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBeeconIDChanging(int value);
    partial void OnBeeconIDChanged();
    partial void OnBeeconLongitudeChanging(string value);
    partial void OnBeeconLongitudeChanged();
    partial void OnBeeconLatitudeChanging(string value);
    partial void OnBeeconLatitudeChanged();
    partial void OnBeeconDescriptionChanging(string value);
    partial void OnBeeconDescriptionChanged();
    partial void OnBeeconDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnBeeconDateCreatedChanged();
    partial void OnBeeconExpiredChanging(System.Nullable<System.DateTime> value);
    partial void OnBeeconExpiredChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnBeeconContent_URLChanging(string value);
    partial void OnBeeconContent_URLChanged();
    partial void OnPrivacyTypeIDChanging(int value);
    partial void OnPrivacyTypeIDChanged();
    #endregion
		
		public tblBeecon()
		{
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeeconID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BeeconID
		{
			get
			{
				return this._BeeconID;
			}
			set
			{
				if ((this._BeeconID != value))
				{
					this.OnBeeconIDChanging(value);
					this.SendPropertyChanging();
					this._BeeconID = value;
					this.SendPropertyChanged("BeeconID");
					this.OnBeeconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeeconLongitude", DbType="VarChar(45)")]
		public string BeeconLongitude
		{
			get
			{
				return this._BeeconLongitude;
			}
			set
			{
				if ((this._BeeconLongitude != value))
				{
					this.OnBeeconLongitudeChanging(value);
					this.SendPropertyChanging();
					this._BeeconLongitude = value;
					this.SendPropertyChanged("BeeconLongitude");
					this.OnBeeconLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeeconLatitude", DbType="VarChar(45)")]
		public string BeeconLatitude
		{
			get
			{
				return this._BeeconLatitude;
			}
			set
			{
				if ((this._BeeconLatitude != value))
				{
					this.OnBeeconLatitudeChanging(value);
					this.SendPropertyChanging();
					this._BeeconLatitude = value;
					this.SendPropertyChanged("BeeconLatitude");
					this.OnBeeconLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeeconDescription", DbType="VarChar(45)")]
		public string BeeconDescription
		{
			get
			{
				return this._BeeconDescription;
			}
			set
			{
				if ((this._BeeconDescription != value))
				{
					this.OnBeeconDescriptionChanging(value);
					this.SendPropertyChanging();
					this._BeeconDescription = value;
					this.SendPropertyChanged("BeeconDescription");
					this.OnBeeconDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeeconDateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> BeeconDateCreated
		{
			get
			{
				return this._BeeconDateCreated;
			}
			set
			{
				if ((this._BeeconDateCreated != value))
				{
					this.OnBeeconDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._BeeconDateCreated = value;
					this.SendPropertyChanged("BeeconDateCreated");
					this.OnBeeconDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeeconExpired", DbType="DateTime")]
		public System.Nullable<System.DateTime> BeeconExpired
		{
			get
			{
				return this._BeeconExpired;
			}
			set
			{
				if ((this._BeeconExpired != value))
				{
					this.OnBeeconExpiredChanging(value);
					this.SendPropertyChanging();
					this._BeeconExpired = value;
					this.SendPropertyChanged("BeeconExpired");
					this.OnBeeconExpiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeeconContent_URL", DbType="VarChar(45)")]
		public string BeeconContent_URL
		{
			get
			{
				return this._BeeconContent_URL;
			}
			set
			{
				if ((this._BeeconContent_URL != value))
				{
					this.OnBeeconContent_URLChanging(value);
					this.SendPropertyChanging();
					this._BeeconContent_URL = value;
					this.SendPropertyChanged("BeeconContent_URL");
					this.OnBeeconContent_URLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivacyTypeID", DbType="Int NOT NULL")]
		public int PrivacyTypeID
		{
			get
			{
				return this._PrivacyTypeID;
			}
			set
			{
				if ((this._PrivacyTypeID != value))
				{
					this.OnPrivacyTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PrivacyTypeID = value;
					this.SendPropertyChanged("PrivacyTypeID");
					this.OnPrivacyTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblBeecon", Storage="_tblUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblBeecons.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblBeecons.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
